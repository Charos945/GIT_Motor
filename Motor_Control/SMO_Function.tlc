%% File : SMO_Function.tlc
%% Created : Wed Aug 25 17:16:52 2021
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "SMO_Function.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  SMO_Function "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
  %openfile externs

    #ifdef __cplusplus
    extern "C" {
    #endif

    extern void SMO_Function_Start_wrapper(void);

    extern void SMO_Function_Outputs_wrapper(const real32_T *Ialpha,
			const real32_T *Ibeta,
			const real32_T *Valpha,
			const real32_T *Vbeta,
			const real32_T *Est_we,
			const real32_T *A,
			const real32_T *B,
			const real32_T *C,
			const real32_T *k,
			const real32_T *m,
			const real32_T *tao,
			const real32_T *Ts,
			real32_T *Est_Ialpha,
			real32_T *Est_Ibeta,
			real32_T *Est_Ealpha,
			real32_T *Est_Ebeta,
			real32_T *Zalpha,
			real32_T *Zbeta);

    extern void SMO_Function_Terminate_wrapper(void);

    #ifdef __cplusplus
    }
    #endif
  %closefile externs
  %<LibCacheExtern(externs)>
  %%
%endfunction


%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign pu0 = LibBlockInputSignalAddr(0, "", "", 0)
  %assign pu1 = LibBlockInputSignalAddr(1, "", "", 0)
  %assign pu2 = LibBlockInputSignalAddr(2, "", "", 0)
  %assign pu3 = LibBlockInputSignalAddr(3, "", "", 0)
  %assign pu4 = LibBlockInputSignalAddr(4, "", "", 0)
  %assign pu5 = LibBlockInputSignalAddr(5, "", "", 0)
  %assign pu6 = LibBlockInputSignalAddr(6, "", "", 0)
  %assign pu7 = LibBlockInputSignalAddr(7, "", "", 0)
  %assign pu8 = LibBlockInputSignalAddr(8, "", "", 0)
  %assign pu9 = LibBlockInputSignalAddr(9, "", "", 0)
  %assign pu10 = LibBlockInputSignalAddr(10, "", "", 0)
  %assign pu11 = LibBlockInputSignalAddr(11, "", "", 0)
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign py1 = LibBlockOutputSignalAddr(1, "", "", 0)
  %assign py2 = LibBlockOutputSignalAddr(2, "", "", 0)
  %assign py3 = LibBlockOutputSignalAddr(3, "", "", 0)
  %assign py4 = LibBlockOutputSignalAddr(4, "", "", 0)
  %assign py5 = LibBlockOutputSignalAddr(5, "", "", 0)
  SMO_Function_Outputs_wrapper(%<pu0>, %<pu1>, %<pu2>, %<pu3>, %<pu4>, %<pu5>, %<pu6>, %<pu7>, %<pu8>, %<pu9>, %<pu10>, %<pu11>, %<py0>, %<py1>, %<py2>, %<py3>, %<py4>, %<py5>);
  %%
%endfunction


%% [EOF] SMO_Function.tlc

